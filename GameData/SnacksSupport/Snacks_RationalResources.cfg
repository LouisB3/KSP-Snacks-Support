// Ore -> Snack converters instead use Hydrates (CRP) or Rock (WBI-CS)

@PART[*]:HAS[@MODULE[SnackProcessor]]:NEEDS[RationalResources,CommunityResourcePack,!ClassicStock]:LAST[Snacks]
{
  @MODULE[SnackProcessor]
  {
    @INPUT_RESOURCE:HAS[#ResourceName[Ore]]
    {
      @ResourceName = Hydrates
      @Ratio *= 3.33333333 // 2x efficient as Ore by mass (density is 15% of Ore)
    }
  }
}

@PART[*]:HAS[@MODULE[SnackProcessor]]:NEEDS[RationalResources,ClassicStock]:LAST[Snacks]
{
  @MODULE[SnackProcessor]
  {
    @INPUT_RESOURCE:HAS[#ResourceName[Ore]]
    {
      @ResourceName = Rock
      @Ratio *= 2 // 2x efficient as Ore by mass (density is 25% of Ore)
    }
  }
}

// Also do the same for alternate modules

@PART[*]:HAS[@MODULE[SnacksConverter]]:NEEDS[RationalResources,CommunityResourcePack,!ClassicStock]:LAST[Snacks]
{
  @MODULE[SnacksConverter]
  {
    @INPUT_RESOURCE:HAS[#ResourceName[Ore]]
    {
      @ResourceName = Hydrates
      @Ratio *= 3.33333333 // 2x efficient as Ore by mass (density is 15% of Ore)
    }
  }
}

@PART[*]:HAS[@MODULE[SnacksConverter]]:NEEDS[RationalResources,ClassicStock]:LAST[Snacks]
{
  @MODULE[SnacksConverter]
  {
    @INPUT_RESOURCE:HAS[#ResourceName[Ore]]
    {
      @ResourceName = Rock
      @Ratio *= 2 // 2x efficient as Ore by mass (density is 25% of Ore)
    }
  }
}
